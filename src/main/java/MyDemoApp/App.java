/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package MyDemoApp;

import static spark.Spark.get;
import static spark.Spark.port;
import static spark.Spark.post;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import spark.ModelAndView;
import spark.template.mustache.MustacheTemplateEngine;


public class App {
    public String getGreeting() {
        return "Hello world.";
    }

    public static void main(String[] args) {
        port(getHerokuAssignedPort());

        get("/", (req, res) -> "Hello, World!!!");

        get("/compute",
        (rq,rs) -> {
            Map<String,String> map =new HashMap<>();
            map.put("result", "not computed yet!");
            return new ModelAndView(map, "compute.mustache");
        },
        new MustacheTemplateEngine()
        );

        post("/compute", (req,res)->{
            String input1 = req.queryParams("input1");
            java.util.Scanner sc1 = new java.util.Scanner(input1);
            sc1.useDelimiter("[;\r\n]+");
            java.util.ArrayList<Integer> inputList = new java.util.ArrayList<>();
            while (sc1.hasNext())
            {
              int value = Integer.parseInt(sc1.next().replaceAll("\\s",""));
              inputList.add(value);
            }
            sc1.close();
            
            String input2 = req.queryParams("input2").replaceAll("\\s","");
            int input2AsInt = Integer.parseInt(input2);

            String input3 = req.queryParams("input3").replaceAll("\\s","");
            int input3AsInt = Integer.parseInt(input3);

            String input4 = req.queryParams("input4").replaceAll("\\s","");
            int input4AsInt = Integer.parseInt(input4);

            String result=containsPar(inputList, input2AsInt, input3AsInt, input4AsInt);

            Map<String,String> map = new HashMap<>();
            map.put("result", result);
            return new ModelAndView(map, "compute.mustache");
        },new MustacheTemplateEngine()
        );

    }
     private static int getHerokuAssignedPort() {
        ProcessBuilder processBuilder = new ProcessBuilder();
        if (processBuilder.environment().get("PORT") != null) {
            return Integer.parseInt(processBuilder.environment().get("PORT"));
        }
        return 4567; //return default port if heroku-port isn't set (i.e. on localhost)
    }

    public static String containsPar(ArrayList<Integer> array,int a,int b,int c){
        if(array.size()<1) return "Empty array";

        if(a==b || a==c || b==c) return "Same parameters!Parameters have to be unique";
        String result="";
        int count=0;
        for (Integer i : array) {
            if(i==a){
                count++;
                result=result+i+" ";
            }
            if(i==b){
                count++;
                result=result+i+" ";
            }
            if(i==c){
                count++;
                result=result+i+" ";
            }      
        }
        if(count==0) return "No match";

        
        return "Number(s) is/are in the array:"+result;
    }
}
